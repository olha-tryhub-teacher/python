from socket import socket, AF_INET, SOCK_STREAM
from threading import Thread
import time

# üü¢ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è TCP-—Å–æ–∫–µ—Ç–∞ —Ç–∞ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä—É
sock = socket(AF_INET, SOCK_STREAM)
sock.bind(('localhost', 8080))      # –ü—Ä–∏–≤‚Äô—è–∑–∫–∞ –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞ —ñ –ø–æ—Ä—Ç—É 8080
sock.listen(5)                      # –°–µ—Ä–≤–µ—Ä –º–æ–∂–µ –æ–±—Ä–æ–±–ª—è—Ç–∏ –¥–æ 5 –ø—ñ–¥–∫–ª—é—á–µ–Ω—å –æ–¥–Ω–æ—á–∞—Å–Ω–æ
sock.setblocking(False)            # –ù–µ–±–ª–æ–∫—É—é—á–∏–π —Ä–µ–∂–∏–º (accept() –Ω–µ –∑–∞–≤–∏—Å–∞—î)

# üü¢ –ì–æ–ª–æ–≤–Ω—ñ —Å–ª–æ–≤–Ω–∏–∫–∏:
players = {}      # conn: {'id': int, 'x': int, 'y': int, 'r': int}
conn_ids = {}     # conn: id ‚Äî –¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –¥–æ ID –ø–æ —Å–æ–∫–µ—Ç—É
id_counter = 0    # –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID –∫–æ–∂–Ω–æ–º—É –Ω–æ–≤–æ–º—É –≥—Ä–∞–≤—Ü—é

# üß† –ü–æ—Ç—ñ–∫, —è–∫–∏–π –æ–±—Ä–æ–±–ª—è—î –≤—Å—ñ –¥—ñ—ó –≤ –≥—Ä—ñ
def handle_data():
   global id_counter
   while True:
       time.sleep(0.01)  # –ú–∞–ª–µ–Ω—å–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∑–Ω–∏–∂–µ–Ω–Ω—è –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è CPU
       player_data = {}  # –¢–∏–º—á–∞—Å–æ–≤–∏–π —Å–ª–æ–≤–Ω–∏–∫ –¥–ª—è –≥—Ä–∞–≤—Ü—ñ–≤, —è–∫—ñ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
       to_remove = []    # –°–ø–∏—Å–æ–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤, —è–∫–∏—Ö —Ç—Ä–µ–±–∞ –≤—ñ–¥'—î–¥–Ω–∞—Ç–∏

       # üîÅ –ß–∏—Ç–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—ñ–¥ —É—Å—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
       for conn in list(players):
           try:
               data = conn.recv(64).decode().strip()
               if ',' in data:
                   parts = data.split(',')
                   if len(parts) == 4:
                       pid, x, y, r = map(int, parts)
                       players[conn] = {'id': pid, 'x': x, 'y': y, 'r': r}
                       player_data[conn] = players[conn]  # –î–æ–¥–∞—î–º–æ –¥–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö
           except:
               continue  # –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ

       # üß® –û–±—Ä–æ–±–∫–∞ –∑—ñ—Ç–∫–Ω–µ–Ω—å –º—ñ–∂ –≥—Ä–∞–≤—Ü—è–º–∏
       eliminated = []  # –°–ø–∏—Å–æ–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤, —è–∫–∏—Ö "–∑‚Äô—ó–ª–∏"
       for conn1 in player_data:
           if conn1 in eliminated: continue
           p1 = player_data[conn1]
           for conn2 in player_data:
               if conn1 == conn2 or conn2 in eliminated: continue
               p2 = player_data[conn2]
               dx, dy = p1['x'] - p2['x'], p1['y'] - p2['y']
               distance = (dx**2 + dy**2)**0.5
               if distance < p1['r'] + p2['r'] and p1['r'] > p2['r'] * 1.1:
                   # –Ø–∫—â–æ –≥—Ä–∞–≤–µ—Ü—å p1 –±—ñ–ª—å—à–∏–π —ñ –Ω–∞–∫—Ä–∏–≤ p2 ‚Äî –ø–æ–≥–ª–∏–Ω–∞—î –π–æ–≥–æ
                   p1['r'] += int(p2['r'] * 0.5)
                   players[conn1] = p1
                   eliminated.append(conn2)

       # üì§ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç–∞–º
       for conn in list(players.keys()):
           if conn in eliminated:
               # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ—Ä–∞–∑–∫–∏
               try:
                   conn.send("LOSE".encode())
               except:
                   pass
               to_remove.append(conn)
               continue

           try:
               # –§–æ—Ä–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤ (–æ–∫—Ä—ñ–º —Å–∞–º–æ–≥–æ —Å–µ–±–µ)
               packet = '|'.join([f"{p['id']},{p['x']},{p['y']},{p['r']}"
                                  for c, p in players.items() if c != conn and c not in eliminated]) + '|'
               conn.send(packet.encode())  # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
           except:
               to_remove.append(conn)  # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è ‚Äî –≤—ñ–¥'—î–¥–Ω—É—î–º–æ

       # üîª –í–∏–¥–∞–ª—è—î–º–æ –≥—Ä–∞–≤—Ü—ñ–≤, —è–∫–∏—Ö –ø–æ–≥–ª–∏–Ω—É–ª–∏ –∞–±–æ —Ä–æ–∑—ñ—Ä–≤–∞–ª–∏ –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è
       for conn in to_remove:
           players.pop(conn, None)
           conn_ids.pop(conn, None)

# üßµ –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
Thread(target=handle_data, daemon=True).start()
print("SERVER running...")

# üîÅ –ü—Ä–∏–π–æ–º –Ω–æ–≤–∏—Ö –ø—ñ–¥–∫–ª—é—á–µ–Ω—å
while True:
   try:
       conn, addr = sock.accept()       # –ü—Ä–∏–π–º–∞—î–º–æ –Ω–æ–≤–µ –∑'—î–¥–Ω–∞–Ω–Ω—è
       conn.setblocking(False)          # –†–æ–±–∏–º–æ —Å–æ–∫–µ—Ç –Ω–µ–±–ª–æ–∫—É—é—á–∏–º
       id_counter += 1                  # –ù–æ–≤–∏–π ID
       players[conn] = {'id': id_counter, 'x': 0, 'y': 0, 'r': 20}  # –°—Ç–∞—Ä—Ç–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
       conn_ids[conn] = id_counter
       conn.send(f"{id_counter},0,0,20".encode())  # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≥—Ä–∞–≤—Ü—é –π–æ–≥–æ ID —ñ —Å—Ç–∞—Ä—Ç–æ–≤—ñ –¥–∞–Ω—ñ
   except:
       pass  # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–∏–π–Ω—è—Ç–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ —á–µ–∫–∞—î–º–æ –¥–∞–ª—ñ
